# 도미  데이터 준비
bream_length = [25.4, 26.3, 26.5, 29.0,29.0, 29.7, 29.7 , 30.0, 30.0, 30.7, 31.0, 31.0, 31.5, 32.0, 32.0, 32.0, 33.0, 33.0, 33.5, 33.5 , 34.0, 34.0, 34.5, 35.0,35.0,35.0,35.0, 36.0,36.0,37.0,38.5,38.5,39.5,41.0,41.0]
bream_weight = [242.0 , 290.0, 340.0,363.0, 430.0,450.0 , 500.0, 390.0, 450.0, 500.0, 475.0, 500.0, 500.0, 340.0,  600.0, 600.0, 700.0 , 700.0, 610.0, 650.0, 575.0, 685.0, 620.0, 680.0, 700.0, 725.0, 720.0, 714.0, 850.0, 1000.0, 920.0, 955.0, 925.0, 975.0, 950.0]

import matplotlib.pyplot as plt         # 맷플롯 import
plt.scatter(bream_length, bream_weight) # 산점도 그래프
plt.show()

# 빙어 데이터 준비
smelt_length = [9.8 , 10.5, 10.6, 11.0, 11.2, 11.3, 11.8, 11.8, 12.0, 12.2, 12.4,13.0, 14.3,15.0]
smelt_weight = [6.7,7.5,7.0,9.7,9.8,8.7,10.0,9.9,9.8,12.2,13.4,12.2,19.7,19.9]

plt.scatter(bream_length, bream_weight)
plt.scatter(smelt_length,smelt_weight)
plt.show()

# 도미 데이터 + 빙어 데이터
length = bream_length + smelt_length 
weight = bream_weight + smelt_weight

fish_data = [[l,w] for l,w in zip(length,weight)]
print(fish_data)

fish_target = [1] * 35 +[0] * 14
print(fish_target)

from sklearn.neighbors import KNeighborsClassifier  
kn = KNeighborsClassifier()
kn.fit(fish_data, fish_target)    # fit() = 훈련
kn.score(fish_data,fish_target)    # 훈련 결과 0~1 값

kn.predict([[30,600]])

print(kn._fit_X)     ## x값은 fish_data 전부임

print(kn._y)       ## y값은 fish_target임

kn49 = KNeighborsClassifier(n_neighbors=49)  ## 참고 데이터를 49개로 한 kn49 모델 >> 가장 가까운데이터 49개를 기준!!!!으로 사용 > 어떤 데이터를 넣어도 도미로 예측함
# 어떤 데이터가 들어왔을때 데이터 49개와 비교하여 (49개)와 가까운 것을 고름 (도미가 더 많으므로) 무조건 도미라고 예측하는것
kn49.fit(fish_data, fish_target)
kn49.score(fish_data, fish_target)  # = 35/49 랑 같음

print(35/49)

# 기본값을 5라고 해보자
